import { processHtmlAttributes } from '../../common/html-attributes';
static var ignoredAttributes = [
    'class',
    'description',
    'portions',
    'metric',
    'subtitle',
    'layout'
];
static {
    var colorsAll = [
        'primary',
        'secondary',
        'tertiary',
        'quaternary',
        'quinary'
    ];
}
static var colorsTwo = ['primary', 'secondary'];
static var colorsThree = ['primary', 'tertiary', 'secondary'];
static var colorsMore = ['primary', 'tertiary', 'secondary', 'quaternary', 'quinary'];
$ var hasTitle = !!input.title;
$ var hasDescription = !!input.description;
$ var colors = input.portions.length > 2 ? colorsThree : colorsTwo;
$ var colorClasses = input.portions.length > 3 ? colorsMore : colors;

<div
    ...processHtmlAttributes(input, ignoredAttributes)
    class=[
        'chart',
        input.layout === 'composition' && (input.metric || input.subtitle) && 'chart--composition',
        (input.layout === 'legend-left' || input.layout === 'legend-right') && 'chart--horizontal',
        input.layout === 'legend-left' && 'chart--left',
        input.layout === 'legend-right' && 'chart--right',
        input.class
    ]
>
    <if((input.metric || input.subtitle) && input.layout === 'composition' || !input.layout)>
        <div
            class=[
                !input.layout ? 'chart__metrics--stacked' : 'chart__metrics'
        ]>
            <if (input.metric)>
                <span.chart__metric>
                    <${input.metric.renderBody}/>
                </span>
            </if>
            <if(input.subtitle)>
                <span.chart__subtitle>
                    <${input.subtitle.renderBody}/>
                </span>
            </if>
        </div>
    </if>
    <ebay-donut-graph
        containerId=state.containerId
        class=[
            'chart-graph__container',
            (input.layout === 'legend-left' || input.layout === 'legend-right') && 'chart-graph__container--horizontal',
            input.layout === 'legend-left' && 'chart-graph__container--left',
            input.layout === 'legend-right' && 'chart-graph__container--right',
            (input.layout === 'composition' && (input.metric || input.subtitle)) && 'chart-graph__container--composition']
        portions=input.portions
        focusIndex=state.focusIndex
        description=input.description
        on-focus('handlePathFocus')
        on-blur('handlePathBlur') />
    <div
        class=[
            'chart-legend__container',
            (input.layout === 'legend-left' || input.layout === 'legend-right') && 'chart-legend__container--horizontal'
        ]>
        <if((input.metric || input.subtitle) && (input.layout === 'legend-left' || input.layout === 'legend-right'))>
            <div class='chart__metrics-horizontal'>
                <span.chart__metric>
                    <${input.metric.renderBody}/>
                </span>
                <if(input.subtitle)>
                    <span.chart__subtitle>
                        <${input.subtitle.renderBody}/>
                    </span>
                </if>
            </div>
        </if>
        <ebay-chart-legend
            focusIndex=state.focusIndex
            containerId=state.containerId
            on-focus('handlePathFocus')
            on-blur('handlePathBlur')
        >
            <for|v| of=state.portions>
                <@value ...v value=v.rawValue/>
            </for>
        </ebay-chart-legend>
    </div>
    <if (state.showToolTip)>
        <div.chart__tooltip>
            <div.chart__tooltip-container>
                <span class="tooltip__pointer"></span>
                <if(state.focusIndex !== -1)>
                    <span.chart__tooltip__label>${state.portions[state.focusIndex].text}</span>
                    <span.chart__tooltip__value>${state.portions[state.focusIndex].rawValue}</span>
                </if>
            </div>
        </div>
    </if>
</div>
